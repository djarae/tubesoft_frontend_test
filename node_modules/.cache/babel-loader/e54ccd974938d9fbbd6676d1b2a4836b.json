{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/Desktop/DocsDiegMac/DocTrabYUnivMAC/ProyectosPersonales/ScrappingApp/react-scrapping-web/src/containers/Home.js\",\n    _s = $RefreshSig$();\n\n// React\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useHistory } from \"react-router-dom\";\nimport { Menu } from \"primereact/menu\";\nimport Loader from \"react-loader-spinner\";\nimport Calendar from \"../components/Calendar\";\nimport SummaryResults from \"../components/summaryResults\";\nimport { Carousel } from \"primereact/carousel\";\nimport Tutorial from \"../components/Tutorial\";\nimport MovementScreeningSummary from \"../components/MovementScreeningSummary\"; // Amplify\n\nimport { Auth, API } from \"aws-amplify\";\nimport config from \"../aws-exports\"; // Styles\n\nimport \"../styles/Home.css\";\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"; // Images\n\nimport isotipo from \"../assets/images/isotipo.svg\";\nimport logo from \"../assets/images/logo.svg\";\nimport bkgTopleft from \"../assets/images/top-left.svg\";\nimport bkg1 from \"../assets/images/bkg-1.svg\";\nimport countDownSound from \"../assets/sounds/countdown_sound.mp3\"; // DB\n\nimport { listResults, listReferences, listRoutines, managementUsers, getEnterprisebyId, listRoutinesExercises } from \"../graphql/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    userHasAuthenticated,\n    userData,\n    setUserData,\n    currentRoutine,\n    setCurrentRoutine,\n    setCurrentExercise,\n    referenceData,\n    setReferenceData,\n    routineSelected,\n    setRoutineSelected,\n    tutorialStep,\n    setTutorialStep,\n    movScreenSumm,\n    setMovScreenSumm\n  } = useAppContext();\n  const history = useHistory();\n  const [dataCalendar, setDataCalendar] = useState([]);\n  const [starting, setStart] = useState(false);\n  const [exercisesCompleted, setExercisesCompleted] = useState([]);\n  const [showExerciseResult, setShowExerciseResult] = useState(0);\n  const [userResults, setUserResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hiddenSummary, setHiddenSummary] = useState(false);\n  const menu = useRef(null);\n  var menuItems = [{\n    items: [, {\n      label: \"Cerrar Sesión\",\n      // icon: \"pi pi-arrow-left\",\n      command: () => {\n        handleLogout();\n      }\n    }]\n  }];\n\n  if (userData.role === \"admins\") {\n    menuItems = [{\n      items: [{\n        label: \"Administrador\",\n        // icon: \"pi pi-arrow-left\",\n        command: () => {\n          history.push(\"/admins\");\n        }\n      }, {\n        label: \"Cerrar Sesión\",\n        // icon: \"pi pi-arrow-left\",\n        command: () => {\n          handleLogout();\n        }\n      }]\n    }];\n  }\n\n  var audioCountdown = new Audio(countDownSound);\n  var currentDay = new Date(); // currentDay = 4 + \"/\" + 17 + \"/\" + 2021;\n  // currentDay = new Date(currentDay);\n\n  useEffect(async () => {\n    let routine_selected = routineSelected;\n\n    if (new Date().getHours() > 12) {\n      routine_selected = \"PM\";\n    } else {\n      routine_selected = \"AM\";\n    }\n\n    setRoutineSelected(routine_selected);\n\n    if (referenceData.length !== 0 && Object.keys(userData).length !== 0) {\n      let user_ID = await Auth.currentCredentials();\n      let cognitoID = user_ID.identityId;\n      let dbResults = await getResults(userData);\n      let month = currentDay.getMonth() + 1;\n      let anno = currentDay.getFullYear();\n      fillCalendar(userData, dbResults, month, anno, routine_selected);\n    } else {\n      let reference_data = await loadReferenceData();\n      getUserData(reference_data, routine_selected);\n    }\n  }, []);\n\n  async function getUserData(reference_data, routine_selected) {\n    let user_ID = await Auth.currentCredentials();\n    let cognito_id = user_ID.identityId;\n    let email = await Auth.currentUserInfo();\n    email = email.attributes.email;\n    let User = await API.graphql({\n      query: managementUsers,\n      variables: {\n        data: JSON.stringify({\n          cognito_id: cognito_id,\n          email: email,\n          product_id: config.product_id\n        })\n      }\n    });\n    User = JSON.parse(User.data.managementUsers);\n    let enterprise_name = await API.graphql({\n      query: getEnterprisebyId,\n      variables: {\n        id: User.enterprise_id\n      }\n    });\n    enterprise_name = enterprise_name.data.getEnterprisebyId.name;\n    User[\"enterprise_name\"] = enterprise_name;\n    setUserData(User);\n    let dbResults = await getResults(User);\n    let month = currentDay.getMonth() + 1;\n    let anno = currentDay.getFullYear();\n    fillCalendar(User, dbResults, month, anno, routine_selected, reference_data);\n  }\n\n  async function getResults(user) {\n    let dbResults = [];\n    let results = await API.graphql({\n      query: listResults,\n      variables: {\n        user_id: user.id\n      }\n    });\n    /*Console.log(\"Inicio del programa y tal\")*/\n    //Aqui tengo que colocar el codigo para iniciar encuesta \n    //Puedo hacer que sea hidden o no hidden el objeto, utilizando creo que un hook  que se cambie segun corresponda y que \n    //cambie a hidden un a vez la cosa se actualice \n\n    setMovScreenSumm(0);\n    dbResults = results.data.listResults; // if (dbResults.length === 0) {\n    //   setTutorialStep(0);\n    // }\n\n    setUserResults(dbResults);\n    return dbResults;\n  }\n\n  async function handleLogout() {\n    setUserData({});\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push(\"/login\");\n  }\n\n  function formatDate(date) {\n    let date_ = date.split(\"T\")[0];\n    return date_.split(\"-\")[1] + \"/\" + date_.split(\"-\")[2] + \"/\" + date_.split(\"-\")[0];\n  }\n\n  function getDBDate(date) {\n    let out_date = date.split(\"T\")[0];\n    out_date = new Date(out_date.split(\"-\")[0], parseInt(out_date.split(\"-\")[1]) - 1, out_date.split(\"-\")[2]);\n    return out_date;\n  }\n\n  function formatPrettyDate(date) {\n    let date_ = date.split(\"-\");\n    return date_[2] + \"-\" + date_[1] + \"-\" + date_[0];\n  }\n\n  async function fillCalendar(user, userResults, month, anno, routine_selected, reference_data = referenceData) {\n    let offset = new Date(month + \"/\" + 1 + \"/\" + anno).getDay();\n\n    if (offset === 0) {\n      offset = 7;\n    }\n\n    let routines = await API.graphql({\n      query: listRoutines,\n      variables: {\n        enterprise_id: user.enterprise_id\n      }\n    });\n    routines = routines.data.listRoutines;\n    user[\"routines\"] = routines;\n    let calendar = routines.filter(routine => {\n      let date = getDBDate(routine.routine_datetime);\n      return date.getMonth() + 1 === month && date.getFullYear() === anno;\n    });\n    calendar.sort((a, b) => getDBDate(a.routine_datetime).getTime() - getDBDate(b.routine_datetime).getTime());\n    let calendar_AM = calendar.filter(element => element.classification == \"AM\");\n    let calendar_PM = calendar.filter(element => element.classification == \"PM\");\n    let out_calendar = [];\n\n    function getAttribute(element, attribute) {\n      if (element !== undefined) {\n        return element[attribute];\n      } else {\n        return null;\n      }\n    }\n\n    for (let j = 1; j < 32; j++) {\n      let routine_AM = calendar_AM.filter(element => getDBDate(element.routine_datetime).getDate() === j)[0];\n      let routine_PM = calendar_PM.filter(element => getDBDate(element.routine_datetime).getDate() === j)[0];\n\n      if (routine_AM === undefined && routine_PM === undefined) {\n        let datetime = new Date(anno, month - 1, j);\n\n        if (datetime.getMonth() + 1 !== month) {\n          continue;\n        }\n\n        datetime = datetime.toLocaleString().split(\" \")[0];\n        out_calendar.push({\n          id_AM: \"\",\n          id_PM: \"\",\n          name: \"\",\n          routine_datetime: datetime.split(\"-\")[2] + \"-\" + datetime.split(\"-\")[1] + \"-\" + datetime.split(\"-\")[0] + \"T00:00:00.000Z\",\n          exercises_AM: 0,\n          exercises_PM: 0,\n          AM: [],\n          PM: [],\n          title: j\n        });\n        continue;\n      }\n\n      out_calendar.push({\n        id_AM: getAttribute(routine_AM, \"id\") || \"\",\n        id_PM: getAttribute(routine_PM, \"id\") || \"\",\n        name: getAttribute(routine_AM, \"name\") || getAttribute(routine_PM, \"name\"),\n        routine_datetime: getAttribute(routine_AM, \"routine_datetime\") || getAttribute(routine_PM, \"routine_datetime\"),\n        exercises_AM: getAttribute(routine_AM, \"total_exercises\") || 0,\n        exercises_PM: getAttribute(routine_PM, \"total_exercises\") || 0,\n        title: j\n      });\n    }\n\n    if (out_calendar.length !== 0) {\n      for (let j = 1; j < offset; j++) {\n        out_calendar.unshift({\n          routine_datetime: \"\",\n          exercises_AM: 0,\n          exercises_PM: 0,\n          id_AM: \"\",\n          id_PM: \"\",\n          name: \"\"\n        });\n      }\n\n      let currentRoutine_ = calendar.filter(routine => getDBDate(routine.routine_datetime).getDate() === currentDay.getDate() & routine.classification === routine_selected)[0];\n\n      if (currentRoutine_) {\n        let exercises = await API.graphql({\n          query: listRoutinesExercises,\n          variables: {\n            routine_id: currentRoutine_.id\n          }\n        });\n        exercises = exercises.data.listRoutinesExercises;\n        exercises.sort(function (a, b) {\n          var keyA = a.id.split(\"-\")[a.id.split(\"-\").length - 1];\n          var keyB = b.id.split(\"-\")[b.id.split(\"-\").length - 1];\n          if (keyA < keyB) return -1;\n          if (keyA > keyB) return 1;\n          return 0;\n        });\n        currentRoutine_[routine_selected] = exercises.map(exercise => {\n          return reference_data.filter(element => element.id === exercise.reference_id)[0];\n        });\n      } else {\n        currentRoutine_ = out_calendar.filter(routine => getDBDate(routine.routine_datetime).getDate() === currentDay.getDate())[0];\n      }\n\n      userResults = userResults.filter(element => element.routine_id === currentRoutine_.id);\n\n      if (month === currentDay.getMonth() + 1) {\n        setCurrentRoutine(currentRoutine_);\n      }\n\n      await setDataCalendar([]);\n      setExercisesCompleted(userResults);\n      setDataCalendar(out_calendar);\n      setUserData(user);\n    }\n  }\n\n  async function loadReferenceData() {\n    let references = await API.graphql({\n      query: listReferences\n    });\n    let dbReferences = references.data.listReferences;\n    setReferenceData(await dbReferences);\n    return dbReferences;\n  }\n\n  async function changeDate(date) {\n    if (getDBDate(currentRoutine.routine_datetime).getDate() !== new Date(formatDate(date)).getDate()) {\n      let currentRoutine_ = userData.routines.filter(routine => {\n        let dbDate = getDBDate(routine.routine_datetime);\n\n        if (dbDate.getMonth() === new Date(formatDate(date)).getMonth() && dbDate.getDate() === new Date(formatDate(date)).getDate() && routine.classification === routineSelected) {\n          return true;\n        }\n      })[0];\n      let exercises = [];\n      let dayResults = [];\n      let routineResults = [];\n\n      if (currentRoutine_ !== undefined) {\n        exercises = await API.graphql({\n          query: listRoutinesExercises,\n          variables: {\n            routine_id: currentRoutine_.id\n          }\n        });\n        exercises = exercises.data.listRoutinesExercises;\n        currentRoutine_[routineSelected] = exercises.map(exercise => {\n          return referenceData.filter(element => element.id === exercise.reference_id)[0];\n        });\n        dayResults = userResults.filter(element => element.result_datetime.split(\"T\")[0] === currentRoutine_.routine_datetime.split(\"T\")[0]);\n        routineResults = userResults.filter(element => element.routine_id === currentRoutine_.id);\n      } else {\n        currentRoutine_ = {\n          id_AM: \"\",\n          id_PM: \"\",\n          name: \"\",\n          routine_datetime: date.split(\"-\")[2] + \"-\" + date.split(\"-\")[1] + \"-\" + date.split(\"-\")[0],\n          exercises_AM: 0,\n          exercises_PM: 0,\n          AM: [],\n          PM: []\n        };\n      }\n\n      if (dayResults.length > 0 || new Date(currentDay.getMonth() + 1 + \"/\" + currentDay.getDate() + \"/\" + currentDay.getFullYear()).getTime() === new Date(formatDate(date)).getTime()) {\n        await setExercisesCompleted([]);\n        setExercisesCompleted(routineResults);\n        setCurrentRoutine(currentRoutine_);\n        setShowExerciseResult(0);\n      }\n    }\n  }\n\n  function getExercisesTime(exercises) {\n    let totalTime = 0;\n    exercises.forEach(function (element) {\n      totalTime = totalTime + element.exercise_time;\n    });\n    let m = Math.floor(totalTime % 3600 / 60);\n    let s = Math.floor(totalTime % 3600 % 60);\n\n    if (s < 10) {\n      s = \"0\" + s.toString();\n    }\n\n    if (s === 0) {\n      return m + \":00\";\n    } else {\n      return m + \":\" + s;\n    }\n  }\n\n  function startRoutine() {\n    setStart(!starting);\n  }\n\n  function startExercises() {\n    audioCountdown.play();\n    audioCountdown.pause();\n    setCurrentExercise(currentRoutine[routineSelected][0]);\n    history.push(\"/routine\");\n  }\n\n  function changeCalendar(month, anno) {\n    fillCalendar(userData, userResults, month, anno);\n  }\n\n  function changeShowExerciseResult(index) {\n    if (showExerciseResult === index) {\n      setShowExerciseResult(0);\n    } else {\n      setShowExerciseResult(index);\n    }\n  }\n\n  async function changeRoutine(routine) {\n    let currentRoutine_aux = userData.routines.filter(element => {\n      if (element.routine_datetime.split(\"T\")[0] === currentRoutine.routine_datetime.split(\"T\")[0] && element.classification === routine) {\n        return true;\n      }\n    })[0];\n    let exercises = await API.graphql({\n      query: listRoutinesExercises,\n      variables: {\n        routine_id: currentRoutine_aux.id\n      }\n    });\n    exercises = exercises.data.listRoutinesExercises;\n    currentRoutine_aux[routine] = exercises.map(exercise => {\n      return referenceData.filter(element => element.id === exercise.reference_id)[0];\n    });\n    let routineResults = userResults.filter(element => element.routine_id === currentRoutine_aux.id);\n    setIsLoading(true);\n    await setCurrentRoutine(currentRoutine_aux);\n    await setRoutineSelected(routine);\n    await setExercisesCompleted(routineResults);\n    setIsLoading(false);\n  }\n\n  const exercisesTemplate = exercise => {\n    let index = currentRoutine[routineSelected].indexOf(exercise);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stageExerciseTextRoutine\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [exercise.exercise_time, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"routineDiamant\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stageExerciseTextRoutine\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: exercise.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this);\n  };\n\n  const responsiveOptions = [{\n    breakpoint: \"10000px\",\n    numVisible: 8,\n    numScroll: 1\n  }, {\n    breakpoint: \"1400px\",\n    numVisible: 6,\n    numScroll: 1\n  }, {\n    breakpoint: \"600px\",\n    numVisible: 6,\n    numScroll: 1\n  }, {\n    breakpoint: \"480px\",\n    numVisible: 3,\n    numScroll: 1\n  }];\n\n  function dashboardView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content row\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        currentDay: currentDay,\n        dataCalendar: dataCalendar,\n        onChangeDate: changeDate,\n        onChangeCalendar: changeCalendar,\n        userResults: userResults,\n        routineSelected: routineSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DashboardDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DashboardContainer\",\n          children: currentRoutine[routineSelected].length > 0 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"routineHeader\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"routineHeaderTitles\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"RUTINA DE HOY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: [currentRoutine.name.split(\" \")[1].toUpperCase() + \" \", formatPrettyDate(currentRoutine.routine_datetime.split(\"T\")[0])]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"changeRoutine\",\n                    children: routineSelected === \"AM\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"displayTimeOfDay\",\n                      children: \"AM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 606,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"displayTimeOfDayDiv\",\n                      children: [userResults.filter(element => element.result_datetime.split(\"T\")[0] === currentRoutine.routine_datetime.split(\"T\")[0]).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"displayTimeOfDayResults\",\n                        onClick: () => changeRoutine(\"AM\"),\n                        children: \"Resultados AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 614,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"displayTimeOfDay\",\n                        children: \"PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 621,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"routineHeaderCalification\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summaryGoals row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginRight: \"10%\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"summaryCircle\",\n                      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: getExercisesTime(currentRoutine[routineSelected])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 631,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"labelDashboardCircle\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        style: {\n                          marginTop: \"10px\"\n                        },\n                        children: \"Minutos\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 636,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 635,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"summaryCircle\",\n                      style: {\n                        border: \"3px solid white\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: currentRoutine[routineSelected].length\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 644,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 640,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"labelDashboardCircle\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Ejercicios\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 647,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"routineExercises\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Ejercicios\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n                value: currentRoutine[routineSelected],\n                numVisible: 3,\n                numScroll: 3,\n                responsiveOptions: responsiveOptions,\n                itemTemplate: exercisesTemplate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboardButton\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"startRoutine\",\n                onClick: startExercises,\n                children: \"COMENZAR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SummaryResults, {\n              currentDay: currentDay,\n              currentRoutine: currentRoutine,\n              exercisesCompleted: exercisesCompleted,\n              userData: userData,\n              onChange: changeShowExerciseResult,\n              routineSelected: routineSelected,\n              userResults: userResults,\n              setRoutineSelected: setRoutineSelected,\n              setExercisesCompleted: setExercisesCompleted,\n              setCurrentRoutine: setCurrentRoutine,\n              setIsLoading: setIsLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }, this);\n  }\n\n  function resultView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content row\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        currentDay: currentDay,\n        dataCalendar: dataCalendar,\n        onChangeDate: changeDate,\n        onChangeCalendar: changeCalendar,\n        userResults: userResults,\n        routineSelected: routineSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DashboardDiv\",\n        style: {\n          paddingTop: \"1%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DashboardContainer\",\n          children: /*#__PURE__*/_jsxDEV(SummaryResults, {\n            currentDay: currentDay,\n            currentRoutine: currentRoutine,\n            exercisesCompleted: exercisesCompleted,\n            userData: userData,\n            onChange: changeShowExerciseResult,\n            routineSelected: routineSelected,\n            userResults: userResults,\n            setRoutineSelected: setRoutineSelected,\n            setExercisesCompleted: setExercisesCompleted,\n            setCurrentRoutine: setCurrentRoutine,\n            setIsLoading: setIsLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"bkgTopLeft\",\n      src: bkgTopleft,\n      alt: \"reflex1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"bkg1Home\",\n      src: bkg1,\n      alt: \"reflex2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerHome\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logoSpace\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logoImage\",\n          src: logo,\n          alt: \"Aictive Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileSpace\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profileImage\",\n          src: isotipo,\n          alt: \"Profile Image\",\n          onClick: event => menu.current.toggle(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          model: menuItems,\n          popup: true,\n          ref: menu,\n          id: \"popup_menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 11\n        }, this), userData.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nameSpace\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: userData.name || userData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this), userData.enterprise_id.length !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: userData.enterprise_name.split(\"_\").join(\" \") || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 7\n    }, this), dataCalendar.length > 0 && userResults !== null && !isLoading && Object.keys(userData).length !== 0 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: getDBDate(currentRoutine.routine_datetime).getTime() === new Date(currentDay.getMonth() + 1 + \"/\" + currentDay.getDate() + \"/\" + currentDay.getFullYear()).getTime() ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: exercisesCompleted.filter(element => element.routine_id === currentRoutine.id).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: resultView()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: dashboardView()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: userResults.filter(element => element.result_datetime.split(\"T\")[0] === currentRoutine.routine_datetime.split(\"T\")[0]).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: resultView()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: dashboardView()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loaderDiv\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"TailSpin\",\n        color: \"#ea1f63\",\n        height: 100,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 9\n    }, this), movScreenSumm < 4 && /*#__PURE__*/_jsxDEV(MovementScreeningSummary, {\n      value: movScreenSumm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 725,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"VwGsfuH5W+50eSnoR7CTZjpzi64=\", false, function () {\n  return [useAppContext, useHistory];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/usuario/Desktop/DocsDiegMac/DocTrabYUnivMAC/ProyectosPersonales/ScrappingApp/react-scrapping-web/src/containers/Home.js"],"names":["React","useState","useEffect","useRef","useAppContext","useHistory","Menu","Loader","Calendar","SummaryResults","Carousel","Tutorial","MovementScreeningSummary","Auth","API","config","countDownSound","listResults","listReferences","listRoutines","managementUsers","getEnterprisebyId","listRoutinesExercises","Home","userHasAuthenticated","userData","setUserData","currentRoutine","setCurrentRoutine","setCurrentExercise","referenceData","setReferenceData","routineSelected","setRoutineSelected","tutorialStep","setTutorialStep","movScreenSumm","setMovScreenSumm","history","dataCalendar","setDataCalendar","starting","setStart","exercisesCompleted","setExercisesCompleted","showExerciseResult","setShowExerciseResult","userResults","setUserResults","isLoading","setIsLoading","hiddenSummary","setHiddenSummary","menu","menuItems","items","label","command","handleLogout","role","push","audioCountdown","Audio","currentDay","Date","routine_selected","getHours","length","Object","keys","user_ID","currentCredentials","cognitoID","identityId","dbResults","getResults","month","getMonth","anno","getFullYear","fillCalendar","reference_data","loadReferenceData","getUserData","cognito_id","email","currentUserInfo","attributes","User","graphql","query","variables","data","JSON","stringify","product_id","parse","enterprise_name","id","enterprise_id","name","user","results","user_id","signOut","formatDate","date","date_","split","getDBDate","out_date","parseInt","formatPrettyDate","offset","getDay","routines","calendar","filter","routine","routine_datetime","sort","a","b","getTime","calendar_AM","element","classification","calendar_PM","out_calendar","getAttribute","attribute","undefined","j","routine_AM","getDate","routine_PM","datetime","toLocaleString","id_AM","id_PM","exercises_AM","exercises_PM","AM","PM","title","unshift","currentRoutine_","exercises","routine_id","keyA","keyB","map","exercise","reference_id","references","dbReferences","changeDate","dbDate","dayResults","routineResults","result_datetime","getExercisesTime","totalTime","forEach","exercise_time","m","Math","floor","s","toString","startRoutine","startExercises","play","pause","changeCalendar","changeShowExerciseResult","index","changeRoutine","currentRoutine_aux","exercisesTemplate","indexOf","responsiveOptions","breakpoint","numVisible","numScroll","dashboardView","toUpperCase","marginRight","marginTop","border","resultView","paddingTop","bkgTopleft","bkg1","logo","isotipo","event","current","toggle","join"],"mappings":"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","sourcesContent":["// React\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useHistory } from \"react-router-dom\";\nimport { Menu } from \"primereact/menu\";\nimport Loader from \"react-loader-spinner\";\nimport Calendar from \"../components/Calendar\";\nimport SummaryResults from \"../components/summaryResults\";\nimport { Carousel } from \"primereact/carousel\";\nimport Tutorial from \"../components/Tutorial\";\nimport MovementScreeningSummary from \"../components/MovementScreeningSummary\";\n\n// Amplify\nimport { Auth, API } from \"aws-amplify\";\nimport config from \"../aws-exports\";\n\n// Styles\nimport \"../styles/Home.css\";\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n// Images\nimport isotipo from \"../assets/images/isotipo.svg\";\nimport logo from \"../assets/images/logo.svg\";\nimport bkgTopleft from \"../assets/images/top-left.svg\";\nimport bkg1 from \"../assets/images/bkg-1.svg\";\nimport countDownSound from \"../assets/sounds/countdown_sound.mp3\";\n\n// DB\nimport {\n  listResults,\n  listReferences,\n  listRoutines,\n  managementUsers,\n  getEnterprisebyId,\n  listRoutinesExercises,\n} from \"../graphql/queries\";\n\nexport default function Home() {\n  const {\n    userHasAuthenticated,\n    userData,\n    setUserData,\n    currentRoutine,\n    setCurrentRoutine,\n    setCurrentExercise,\n    referenceData,\n    setReferenceData,\n    routineSelected,\n    setRoutineSelected,\n    tutorialStep,\n    setTutorialStep,\n    movScreenSumm,\n    setMovScreenSumm,\n  } = useAppContext();\n  const history = useHistory();\n  const [dataCalendar, setDataCalendar]             = useState([]);\n  const [starting, setStart]                        = useState(false);\n  const [exercisesCompleted, setExercisesCompleted] = useState([]);\n  const [showExerciseResult, setShowExerciseResult] = useState(0);\n  const [userResults, setUserResults]               = useState(null);\n  const [isLoading, setIsLoading]                   = useState(false);\n  const [hiddenSummary,setHiddenSummary]            = useState(false)\n  const menu = useRef(null);\n\n\n  var menuItems = [\n    {\n      items: [\n        ,\n        {\n          label: \"Cerrar Sesión\",\n          // icon: \"pi pi-arrow-left\",\n          command: () => {\n            handleLogout();\n          },\n        },\n      ],\n    },\n  ];\n  if (userData.role === \"admins\") {\n    menuItems = [\n      {\n        items: [\n          {\n            label: \"Administrador\",\n            // icon: \"pi pi-arrow-left\",\n            command: () => {\n              history.push(\"/admins\");\n            },\n          },\n          {\n            label: \"Cerrar Sesión\",\n            // icon: \"pi pi-arrow-left\",\n            command: () => {\n              handleLogout();\n            },\n          },\n        ],\n      },\n    ];\n  }\n\n  var audioCountdown = new Audio(countDownSound);\n  var currentDay = new Date();\n  // currentDay = 4 + \"/\" + 17 + \"/\" + 2021;\n  // currentDay = new Date(currentDay);\n\n  useEffect(async () => {\n    let routine_selected = routineSelected;\n    if (new Date().getHours() > 12) {\n      routine_selected = \"PM\";\n    } else {\n      routine_selected = \"AM\";\n    }\n    setRoutineSelected(routine_selected);\n\n    if (referenceData.length !== 0 && Object.keys(userData).length !== 0) {\n      let user_ID = await Auth.currentCredentials();\n      let cognitoID = user_ID.identityId;\n      let dbResults = await getResults(userData);\n      let month = currentDay.getMonth() + 1;\n      let anno = currentDay.getFullYear();\n      fillCalendar(userData, dbResults, month, anno, routine_selected);\n    } else {\n      let reference_data = await loadReferenceData();\n      getUserData(reference_data, routine_selected);\n    }\n  }, []);\n\n  async function getUserData(reference_data, routine_selected) {\n    let user_ID = await Auth.currentCredentials();\n    let cognito_id = user_ID.identityId;\n    let email = await Auth.currentUserInfo();\n    email = email.attributes.email;\n\n    let User = await API.graphql({\n      query: managementUsers,\n      variables: {\n        data: JSON.stringify({\n          cognito_id: cognito_id,\n          email: email,\n          product_id: config.product_id,\n        }),\n      },\n    });\n\n    User = JSON.parse(User.data.managementUsers);\n    let enterprise_name = await API.graphql({\n      query: getEnterprisebyId,\n      variables: {\n        id: User.enterprise_id,\n      },\n    });\n    enterprise_name = enterprise_name.data.getEnterprisebyId.name;\n    User[\"enterprise_name\"] = enterprise_name;\n    setUserData(User);\n    let dbResults = await getResults(User);\n    let month = currentDay.getMonth() + 1;\n    let anno = currentDay.getFullYear();\n    fillCalendar(\n      User,\n      dbResults,\n      month,\n      anno,\n      routine_selected,\n      reference_data\n    );\n  }\n\n  async function getResults(user) {\n    let dbResults = [];\n    let results = await API.graphql({\n      query: listResults,\n      variables: {\n        user_id: user.id,\n      },\n    });\n    /*Console.log(\"Inicio del programa y tal\")*/\n    //Aqui tengo que colocar el codigo para iniciar encuesta \n    //Puedo hacer que sea hidden o no hidden el objeto, utilizando creo que un hook  que se cambie segun corresponda y que \n     //cambie a hidden un a vez la cosa se actualice \n     setMovScreenSumm(0);\n\n\n\n    dbResults = results.data.listResults;\n    // if (dbResults.length === 0) {\n    //   setTutorialStep(0);\n    // }\n    setUserResults(dbResults);\n    return dbResults;\n  }\n\n  async function handleLogout() {\n    setUserData({});\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push(\"/login\");\n  }\n\n  function formatDate(date) {\n    let date_ = date.split(\"T\")[0];\n    return (\n      date_.split(\"-\")[1] +\n      \"/\" +\n      date_.split(\"-\")[2] +\n      \"/\" +\n      date_.split(\"-\")[0]\n    );\n  }\n\n  function getDBDate(date) {\n    let out_date = date.split(\"T\")[0];\n    out_date = new Date(\n      out_date.split(\"-\")[0],\n      parseInt(out_date.split(\"-\")[1]) - 1,\n      out_date.split(\"-\")[2]\n    );\n    return out_date;\n  }\n\n  function formatPrettyDate(date) {\n    let date_ = date.split(\"-\");\n    return date_[2] + \"-\" + date_[1] + \"-\" + date_[0];\n  }\n\n  async function fillCalendar(\n    user,\n    userResults,\n    month,\n    anno,\n    routine_selected,\n    reference_data = referenceData\n  ) {\n    let offset = new Date(month + \"/\" + 1 + \"/\" + anno).getDay();\n    if (offset === 0) {\n      offset = 7;\n    }\n\n    let routines = await API.graphql({\n      query: listRoutines,\n      variables: {\n        enterprise_id: user.enterprise_id,\n      },\n    });\n    routines = routines.data.listRoutines;\n    user[\"routines\"] = routines;\n\n    let calendar = routines.filter((routine) => {\n      let date = getDBDate(routine.routine_datetime);\n      return date.getMonth() + 1 === month && date.getFullYear() === anno;\n    });\n    calendar.sort(\n      (a, b) =>\n        getDBDate(a.routine_datetime).getTime() -\n        getDBDate(b.routine_datetime).getTime()\n    );\n\n    let calendar_AM = calendar.filter(\n      (element) => element.classification == \"AM\"\n    );\n    let calendar_PM = calendar.filter(\n      (element) => element.classification == \"PM\"\n    );\n\n    let out_calendar = [];\n    function getAttribute(element, attribute) {\n      if (element !== undefined) {\n        return element[attribute];\n      } else {\n        return null;\n      }\n    }\n    for (let j = 1; j < 32; j++) {\n      let routine_AM = calendar_AM.filter(\n        (element) => getDBDate(element.routine_datetime).getDate() === j\n      )[0];\n      let routine_PM = calendar_PM.filter(\n        (element) => getDBDate(element.routine_datetime).getDate() === j\n      )[0];\n      if (routine_AM === undefined && routine_PM === undefined) {\n        let datetime = new Date(anno, month - 1, j);\n        if (datetime.getMonth() + 1 !== month) {\n          continue;\n        }\n        datetime = datetime.toLocaleString().split(\" \")[0];\n        out_calendar.push({\n          id_AM: \"\",\n          id_PM: \"\",\n          name: \"\",\n          routine_datetime:\n            datetime.split(\"-\")[2] +\n            \"-\" +\n            datetime.split(\"-\")[1] +\n            \"-\" +\n            datetime.split(\"-\")[0] +\n            \"T00:00:00.000Z\",\n          exercises_AM: 0,\n          exercises_PM: 0,\n          AM: [],\n          PM: [],\n          title: j,\n        });\n        continue;\n      }\n      out_calendar.push({\n        id_AM: getAttribute(routine_AM, \"id\") || \"\",\n        id_PM: getAttribute(routine_PM, \"id\") || \"\",\n        name:\n          getAttribute(routine_AM, \"name\") || getAttribute(routine_PM, \"name\"),\n        routine_datetime:\n          getAttribute(routine_AM, \"routine_datetime\") ||\n          getAttribute(routine_PM, \"routine_datetime\"),\n        exercises_AM: getAttribute(routine_AM, \"total_exercises\") || 0,\n        exercises_PM: getAttribute(routine_PM, \"total_exercises\") || 0,\n        title: j,\n      });\n    }\n\n    if (out_calendar.length !== 0) {\n      for (let j = 1; j < offset; j++) {\n        out_calendar.unshift({\n          routine_datetime: \"\",\n          exercises_AM: 0,\n          exercises_PM: 0,\n          id_AM: \"\",\n          id_PM: \"\",\n          name: \"\",\n        });\n      }\n      let currentRoutine_ = calendar.filter(\n        (routine) =>\n          (getDBDate(routine.routine_datetime).getDate() ===\n            currentDay.getDate()) &\n          (routine.classification === routine_selected)\n      )[0];\n\n      if (currentRoutine_) {\n        let exercises = await API.graphql({\n          query: listRoutinesExercises,\n          variables: {\n            routine_id: currentRoutine_.id,\n          },\n        });\n        exercises = exercises.data.listRoutinesExercises;\n        exercises.sort(function (a, b) {\n          var keyA = a.id.split(\"-\")[a.id.split(\"-\").length - 1];\n          var keyB = b.id.split(\"-\")[b.id.split(\"-\").length - 1];\n          if (keyA < keyB) return -1;\n          if (keyA > keyB) return 1;\n          return 0;\n        });\n        currentRoutine_[routine_selected] = exercises.map((exercise) => {\n          return reference_data.filter(\n            (element) => element.id === exercise.reference_id\n          )[0];\n        });\n      } else {\n        currentRoutine_ = out_calendar.filter(\n          (routine) =>\n            getDBDate(routine.routine_datetime).getDate() ===\n            currentDay.getDate()\n        )[0];\n      }\n      userResults = userResults.filter(\n        (element) => element.routine_id === currentRoutine_.id\n      );\n      if (month === currentDay.getMonth() + 1) {\n        setCurrentRoutine(currentRoutine_);\n      }\n      await setDataCalendar([]);\n      setExercisesCompleted(userResults);\n      setDataCalendar(out_calendar);\n      setUserData(user);\n    }\n  }\n\n  async function loadReferenceData() {\n    let references = await API.graphql({\n      query: listReferences,\n    });\n    let dbReferences = references.data.listReferences;\n    setReferenceData(await dbReferences);\n    return dbReferences;\n  }\n\n  async function changeDate(date) {\n    if (\n      getDBDate(currentRoutine.routine_datetime).getDate() !==\n      new Date(formatDate(date)).getDate()\n    ) {\n      let currentRoutine_ = userData.routines.filter((routine) => {\n        let dbDate = getDBDate(routine.routine_datetime);\n        if (\n          dbDate.getMonth() === new Date(formatDate(date)).getMonth() &&\n          dbDate.getDate() === new Date(formatDate(date)).getDate() &&\n          routine.classification === routineSelected\n        ) {\n          return true;\n        }\n      })[0];\n      let exercises = [];\n      let dayResults = [];\n      let routineResults = [];\n      if (currentRoutine_ !== undefined) {\n        exercises = await API.graphql({\n          query: listRoutinesExercises,\n          variables: {\n            routine_id: currentRoutine_.id,\n          },\n        });\n        exercises = exercises.data.listRoutinesExercises;\n        currentRoutine_[routineSelected] = exercises.map((exercise) => {\n          return referenceData.filter(\n            (element) => element.id === exercise.reference_id\n          )[0];\n        });\n        dayResults = userResults.filter(\n          (element) =>\n            element.result_datetime.split(\"T\")[0] ===\n            currentRoutine_.routine_datetime.split(\"T\")[0]\n        );\n        routineResults = userResults.filter(\n          (element) => element.routine_id === currentRoutine_.id\n        );\n      } else {\n        currentRoutine_ = {\n          id_AM: \"\",\n          id_PM: \"\",\n          name: \"\",\n          routine_datetime:\n            date.split(\"-\")[2] +\n            \"-\" +\n            date.split(\"-\")[1] +\n            \"-\" +\n            date.split(\"-\")[0],\n          exercises_AM: 0,\n          exercises_PM: 0,\n          AM: [],\n          PM: [],\n        };\n      }\n      if (\n        dayResults.length > 0 ||\n        new Date(\n          currentDay.getMonth() +\n            1 +\n            \"/\" +\n            currentDay.getDate() +\n            \"/\" +\n            currentDay.getFullYear()\n        ).getTime() === new Date(formatDate(date)).getTime()\n      ) {\n        await setExercisesCompleted([]);\n        setExercisesCompleted(routineResults);\n        setCurrentRoutine(currentRoutine_);\n        setShowExerciseResult(0);\n      }\n    }\n  }\n\n  function getExercisesTime(exercises) {\n    let totalTime = 0;\n    exercises.forEach(function (element) {\n      totalTime = totalTime + element.exercise_time;\n    });\n    let m = Math.floor((totalTime % 3600) / 60);\n    let s = Math.floor((totalTime % 3600) % 60);\n    if (s < 10) {\n      s = \"0\" + s.toString();\n    }\n    if (s === 0) {\n      return m + \":00\";\n    } else {\n      return m + \":\" + s;\n    }\n  }\n\n  function startRoutine() {\n    setStart(!starting);\n  }\n\n  function startExercises() {\n    audioCountdown.play();\n    audioCountdown.pause();\n    setCurrentExercise(currentRoutine[routineSelected][0]);\n    history.push(\"/routine\");\n  }\n\n  function changeCalendar(month, anno) {\n    fillCalendar(userData, userResults, month, anno);\n  }\n\n  function changeShowExerciseResult(index) {\n    if (showExerciseResult === index) {\n      setShowExerciseResult(0);\n    } else {\n      setShowExerciseResult(index);\n    }\n  }\n\n  async function changeRoutine(routine) {\n    let currentRoutine_aux = userData.routines.filter((element) => {\n      if (\n        element.routine_datetime.split(\"T\")[0] ===\n          currentRoutine.routine_datetime.split(\"T\")[0] &&\n        element.classification === routine\n      ) {\n        return true;\n      }\n    })[0];\n    let exercises = await API.graphql({\n      query: listRoutinesExercises,\n      variables: {\n        routine_id: currentRoutine_aux.id,\n      },\n    });\n    exercises = exercises.data.listRoutinesExercises;\n    currentRoutine_aux[routine] = exercises.map((exercise) => {\n      return referenceData.filter(\n        (element) => element.id === exercise.reference_id\n      )[0];\n    });\n    let routineResults = userResults.filter(\n      (element) => element.routine_id === currentRoutine_aux.id\n    );\n    setIsLoading(true);\n    await setCurrentRoutine(currentRoutine_aux);\n    await setRoutineSelected(routine);\n    await setExercisesCompleted(routineResults);\n    setIsLoading(false);\n  }\n\n  const exercisesTemplate = (exercise) => {\n    let index = currentRoutine[routineSelected].indexOf(exercise);\n    return (\n      <div>\n        <div>\n          <div className=\"stageExerciseTextRoutine\">\n            <p>{exercise.exercise_time}s</p>\n          </div>\n          <div className=\"routineDiamant\">\n            <h6>{index + 1}</h6>\n          </div>\n          <div className=\"stageExerciseTextRoutine\">\n            <p>{exercise.name}</p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const responsiveOptions = [\n    {\n      breakpoint: \"10000px\",\n      numVisible: 8,\n      numScroll: 1,\n    },\n    {\n      breakpoint: \"1400px\",\n      numVisible: 6,\n      numScroll: 1,\n    },\n    {\n      breakpoint: \"600px\",\n      numVisible: 6,\n      numScroll: 1,\n    },\n    {\n      breakpoint: \"480px\",\n      numVisible: 3,\n      numScroll: 1,\n    },\n  ];\n\n  function dashboardView() {\n    return (\n      <div className=\"content row\">\n        <Calendar\n          currentDay={currentDay}\n          dataCalendar={dataCalendar}\n          onChangeDate={changeDate}\n          onChangeCalendar={changeCalendar}\n          userResults={userResults}\n          routineSelected={routineSelected}\n        />\n        <div className=\"DashboardDiv\">\n          <div className=\"DashboardContainer\">\n            {currentRoutine[routineSelected].length > 0 ? (\n              <React.Fragment>\n                <div className=\"routineHeader\">\n                  <div className=\"routineHeaderTitles\">\n                    <div>\n                      <p>RUTINA DE HOY</p>\n                      <h5>\n                        {currentRoutine.name.split(\" \")[1].toUpperCase() + \" \"}\n                        {formatPrettyDate(\n                          currentRoutine.routine_datetime.split(\"T\")[0]\n                        )}\n                      </h5>\n                      <div className=\"changeRoutine\">\n                        {routineSelected === \"AM\" ? (\n                          <div className=\"displayTimeOfDay\">AM</div>\n                        ) : (\n                          <div className=\"displayTimeOfDayDiv\">\n                            {userResults.filter(\n                              (element) =>\n                                element.result_datetime.split(\"T\")[0] ===\n                                currentRoutine.routine_datetime.split(\"T\")[0]\n                            ).length > 0 && (\n                              <div\n                                className=\"displayTimeOfDayResults\"\n                                onClick={() => changeRoutine(\"AM\")}\n                              >\n                                Resultados AM\n                              </div>\n                            )}\n                            <div className=\"displayTimeOfDay\">PM</div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"routineHeaderCalification\">\n                    <div className=\"summaryGoals row\">\n                      <div style={{ marginRight: \"10%\" }}>\n                        <div className=\"summaryCircle\">\n                          <h4>\n                            {getExercisesTime(currentRoutine[routineSelected])}\n                          </h4>\n                        </div>\n                        <div className=\"labelDashboardCircle\">\n                          <p style={{ marginTop: \"10px\" }}>Minutos</p>\n                        </div>\n                      </div>\n                      <div>\n                        <div\n                          className=\"summaryCircle\"\n                          style={{ border: \"3px solid white\" }}\n                        >\n                          <h4>{currentRoutine[routineSelected].length}</h4>\n                        </div>\n                        <div className=\"labelDashboardCircle\">\n                          <p>Ejercicios</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"routineExercises\">\n                  <h5>Ejercicios</h5>\n                  <Carousel\n                    value={currentRoutine[routineSelected]}\n                    numVisible={3}\n                    numScroll={3}\n                    responsiveOptions={responsiveOptions}\n                    itemTemplate={exercisesTemplate}\n                  />\n                </div>\n                <div className=\"dashboardButton\">\n                  <button className=\"startRoutine\" onClick={startExercises}>\n                    COMENZAR\n                  </button>\n                </div>\n              </React.Fragment>\n            ) : (\n              <div>\n                <SummaryResults\n                  currentDay={currentDay}\n                  currentRoutine={currentRoutine}\n                  exercisesCompleted={exercisesCompleted}\n                  userData={userData}\n                  onChange={changeShowExerciseResult}\n                  routineSelected={routineSelected}\n                  userResults={userResults}\n                  setRoutineSelected={setRoutineSelected}\n                  setExercisesCompleted={setExercisesCompleted}\n                  setCurrentRoutine={setCurrentRoutine}\n                  setIsLoading={setIsLoading}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function resultView() {\n    return (\n      <div className=\"content row\">\n        <Calendar\n          currentDay={currentDay}\n          dataCalendar={dataCalendar}\n          onChangeDate={changeDate}\n          onChangeCalendar={changeCalendar}\n          userResults={userResults}\n          routineSelected={routineSelected}\n        />\n        <div className=\"DashboardDiv\" style={{ paddingTop: \"1%\" }}>\n          <div className=\"DashboardContainer\">\n            <SummaryResults\n              currentDay={currentDay}\n              currentRoutine={currentRoutine}\n              exercisesCompleted={exercisesCompleted}\n              userData={userData}\n              onChange={changeShowExerciseResult}\n              routineSelected={routineSelected}\n              userResults={userResults}\n              setRoutineSelected={setRoutineSelected}\n              setExercisesCompleted={setExercisesCompleted}\n              setCurrentRoutine={setCurrentRoutine}\n              setIsLoading={setIsLoading}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Home\">\n      <img className=\"bkgTopLeft\" src={bkgTopleft} alt=\"reflex1\" />\n      <img className=\"bkg1Home\" src={bkg1} alt=\"reflex2\" />\n      <div className=\"headerHome\">\n        <div className=\"logoSpace\">\n          <img className=\"logoImage\" src={logo} alt=\"Aictive Logo\" />\n        </div>\n        <div className=\"profileSpace\">\n          <img\n            className=\"profileImage\"\n            src={isotipo}\n            alt=\"Profile Image\"\n            onClick={(event) => menu.current.toggle(event)}\n          />\n          <Menu model={menuItems} popup ref={menu} id=\"popup_menu\" />\n          {userData.email && (\n            <div className=\"nameSpace\">\n              <strong>{userData.name || userData.email}</strong>\n              {userData.enterprise_id.length !== 0 && (\n                <p>{userData.enterprise_name.split(\"_\").join(\" \") || \"\"}</p>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      {dataCalendar.length > 0 &&\n      userResults !== null &&\n      !isLoading &&\n      Object.keys(userData).length !== 0 ? (\n        <React.Fragment>\n          {getDBDate(currentRoutine.routine_datetime).getTime() ===\n          new Date(\n            currentDay.getMonth() +\n              1 +\n              \"/\" +\n              currentDay.getDate() +\n              \"/\" +\n              currentDay.getFullYear()\n          ).getTime() ? (\n            <div>\n              {exercisesCompleted.filter(\n                (element) => element.routine_id === currentRoutine.id\n              ).length > 0 ? (\n                <div>{resultView()}</div>\n              ) : (\n                <div>{dashboardView()}</div>\n              )}\n            </div>\n          ) : (\n            <div>\n              {userResults.filter(\n                (element) =>\n                  element.result_datetime.split(\"T\")[0] ===\n                  currentRoutine.routine_datetime.split(\"T\")[0]\n              ).length > 0 ? (\n                <div>{resultView()}</div>\n              ) : (\n                <div>{dashboardView()}</div>\n              )}\n            </div>\n          )}\n        </React.Fragment>\n      ) : (\n        <div className=\"loaderDiv\">\n          <Loader type=\"TailSpin\" color=\"#ea1f63\" height={100} width={100} />\n        </div>\n      )}   \n      {/*LO SIGUIENTE ES UN IF EN REACT (movScreenSumm < 7 ) Y TAMBIEN es el paso de un prop a un componente\n      en este caso \"value\" = movScreenSum*/ }\n      {movScreenSumm < 4 && <MovementScreeningSummary value={movScreenSumm} />} \n      {/* {tutorialStep < 7 && <Tutorial value={tutorialStep} />}  */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}