{"ast":null,"code":"var _jsxFileName = \"/Users/usuario/Desktop/DocsDiegMac/DocTrabYUnivMAC/ProyectosPersonales/ScrappingApp/react-scrapping-web/src/App.js\",\n    _s = $RefreshSig$();\n\n// React\nimport React, { useState, useEffect } from \"react\";\nimport Routes from \"./Routes\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { onError } from \"./libs/errorLib\"; // Amplify\n\nimport { Auth } from \"aws-amplify\"; // Styles\n\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [currentRoutine, setCurrentRoutine] = useState({});\n  const [currentExercise, setCurrentExercise] = useState({});\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== \"No current user\") {\n        onError(e, \"error\");\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  return !isAuthenticating && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        isAuthenticated,\n        userHasAuthenticated,\n        currentRoutine,\n        setCurrentRoutine,\n        currentExercise,\n        setCurrentExercise\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n} // export default withAuthenticator(App);\n\n\n_s(App, \"Z2mKrwHwZSYTT4FXewcwJp5qyqw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/usuario/Desktop/DocsDiegMac/DocTrabYUnivMAC/ProyectosPersonales/ScrappingApp/react-scrapping-web/src/App.js"],"names":["React","useState","useEffect","Routes","AppContext","onError","Auth","App","isAuthenticating","setIsAuthenticating","isAuthenticated","userHasAuthenticated","currentRoutine","setCurrentRoutine","currentExercise","setCurrentExercise","onLoad","currentSession","e"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CACA;;AACA,SAASC,IAAT,QAAqB,aAArB,C,CACA;;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACS,eAAD,EAAkBC,oBAAlB,IAA0CV,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,MAAf,GAAwB;AACtB,QAAI;AACF,YAAMV,IAAI,CAACW,cAAL,EAAN;AACAN,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,KAHD,CAGE,OAAOO,CAAP,EAAU;AACV,UAAIA,CAAC,KAAK,iBAAV,EAA6B;AAC3Bb,QAAAA,OAAO,CAACa,CAAD,EAAI,OAAJ,CAAP;AACD;AACF;;AAEDT,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;;AAED,SACE,CAACD,gBAAD,iBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,UAAD,CAAY,QAAZ;AACE,MAAA,KAAK,EAAE;AACLE,QAAAA,eADK;AAELC,QAAAA,oBAFK;AAGLC,QAAAA,cAHK;AAILC,QAAAA,iBAJK;AAKLC,QAAAA,eALK;AAMLC,QAAAA;AANK,OADT;AAAA,6BAUE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBD,C,CAED;;;GA7CSR,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["// React\nimport React, { useState, useEffect } from \"react\";\nimport Routes from \"./Routes\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { onError } from \"./libs/errorLib\";\n// Amplify\nimport { Auth } from \"aws-amplify\";\n// Styles\nimport \"./App.css\";\n\nfunction App() {\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [currentRoutine, setCurrentRoutine] = useState({});\n  const [currentExercise, setCurrentExercise] = useState({});\n\n\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== \"No current user\") {\n        onError(e, \"error\");\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  return (\n    !isAuthenticating && (\n      <div className=\"App\">\n        <AppContext.Provider\n          value={{\n            isAuthenticated,\n            userHasAuthenticated,\n            currentRoutine,\n            setCurrentRoutine,\n            currentExercise,\n            setCurrentExercise,\n          }}\n        >\n          <Routes />\n        </AppContext.Provider>\n      </div>\n    )\n  );\n}\n\n// export default withAuthenticator(App);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}